{"version":3,"sources":["views/Base/Tooltips/Tooltips.tsx"],"names":["TooltipItem","_super","props","_this","call","this","toggle","bind","state","tooltipOpen","__extends","prototype","setState","render","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","__WEBPACK_IMPORTED_MODULE_1_reactstrap__","className","color","id","item","text","placement","isOpen","target","Component","Tooltips","tooltips","i","newArray","map","element","index","href","rel","autohide","tooltip","key","__WEBPACK_IMPORTED_MODULE_0_react__","__webpack_exports__"],"mappings":"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","file":"static/js/16.92f425b2.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Card, CardBody, CardHeader, Tooltip, UncontrolledTooltip} from 'reactstrap';\n\nclass TooltipItem extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      tooltipOpen: false,\n    };\n  }\n\n  toggle() {\n    this.setState({\n      tooltipOpen: !this.state.tooltipOpen,\n    });\n  }\n\n  render() {\n    return (\n      <span>\n        <Button className=\"mr-1\" color=\"secondary\" id={'Tooltip-' + this.props.id}>\n          {this.props.item.text}\n        </Button>\n        <Tooltip placement={this.props.item.placement} isOpen={this.state.tooltipOpen}\n                 target={'Tooltip-' + this.props.id} toggle={this.toggle}>\n          Tooltip Content!\n        </Tooltip>\n      </span>\n    );\n  }\n}\n\nclass Tooltips extends Component<any, any> {\n\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      tooltipOpen: [false, false],\n      tooltips: [\n        {\n          placement: 'top',\n          text: 'Top',\n        },\n        {\n          placement: 'bottom',\n          text: 'Bottom',\n        },\n        {\n          placement: 'left',\n          text: 'Left',\n        },\n        {\n          placement: 'right',\n          text: 'Right',\n        },\n      ],\n    };\n  }\n\n  toggle(i) {\n    const newArray = this.state.tooltipOpen.map((element, index) => {\n      return (index === i ? !element : false);\n    });\n    this.setState({\n      tooltipOpen: newArray,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"/><strong>Tooltips</strong>\n            <div className=\"card-header-actions\">\n              <a href=\"https://reactstrap.github.io/components/tooltips/\" rel=\"noreferrer noopener\" target=\"_blank\"\n                 className=\"card-header-action\">\n                <small className=\"text-muted\">docs</small>\n              </a>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>Somewhere in here is a <a href=\"#\" id=\"TooltipExample\">tooltip</a>.</p>\n            <Tooltip placement=\"right\" isOpen={this.state.tooltipOpen[0]} target=\"TooltipExample\" toggle={() => {\n              this.toggle(0);\n            }}>\n              Hello world!\n            </Tooltip>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"/><strong>Tooltip</strong>\n            <small> disable autohide</small>\n          </CardHeader>\n          <CardBody>\n            <p>Sometimes you need to allow users to select text within a <a href=\"#\"\n                                                                            id=\"DisabledAutoHideExample\">tooltip</a>.\n            </p>\n            <Tooltip placement=\"top\" isOpen={this.state.tooltipOpen[1]} autohide={false}\n                     target=\"DisabledAutoHideExample\" toggle={() => {\n              this.toggle(1);\n            }}>\n              Try to select this text!\n            </Tooltip>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"/><strong>Tooltip</strong>\n            <small> list</small>\n          </CardHeader>\n          <CardBody>\n            {this.state.tooltips.map((tooltip, i) => {\n              return <TooltipItem key={i} item={tooltip} id={i}/>;\n            })}\n          </CardBody>\n        </Card>\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"/><strong>Tooltip</strong>\n            <small> uncontrolled</small>\n          </CardHeader>\n          <CardBody>\n            <p>Somewhere in here is a <a href=\"#\" id=\"UncontrolledTooltipExample\">tooltip</a>.</p>\n            <UncontrolledTooltip placement=\"right\" target=\"UncontrolledTooltipExample\">\n              Hello world!\n            </UncontrolledTooltip>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Tooltips;\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/Base/Tooltips/Tooltips.tsx"],"sourceRoot":""}